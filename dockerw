#!/usr/bin/env bash
# ------------------------------ tabstop = 4 ----------------------------------
#
# If not stated otherwise in this file or this component's LICENSE file the
# following copyright and licenses apply:
#
# Copyright 2024 Comcast Cable Communications Management, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
#
# ------------------------------ tabstop = 4 ----------------------------------

notice() {
    echo "-- $0: $@"
}

set -e

INTERACTIVE_FLAGS="-it"
EXTRA_ENV="-e SSH_AUTH_SOCK"
DEV_VOL=""

while getopts ":npe:t:d" opt; do
    case ${opt} in
    n) # process option n
        INTERACTIVE_FLAGS=""
        ;;
    p) # pull docker
        docker pull $IMAGE
        ;;
    e) # extra environment variables
        EXTRA_ENV="${EXTRA_ENV} -e ${OPTARG}"
        ;;
    d) # add /dev volume mapping
        DEV_VOL="-v /dev:/dev"
        ;;
    esac
done
shift "$(($OPTIND - 1))"

DIR=$(pwd)

# generate the `docker/.env` file and ensure the network/image is created
$DIR/docker/setupDockerEnv.sh

DOCKER_ENV_PATH="$DIR/docker/.env"

# to build/use an image with a custom tag, the tag must be stored in the
# `docker/.env` file as `IMAGE_TAG=some-tag`
IMAGE_TAG=$(grep "IMAGE_TAG" "$DOCKER_ENV_PATH" | sed 's/IMAGE_TAG=//')
IMAGE_REPO=$(grep "IMAGE_REPO" "$DOCKER_ENV_PATH" | sed 's/IMAGE_REPO=//')

IMAGE="$IMAGE_REPO:$IMAGE_TAG"

EXTRA_VOLUMES="${DEV_VOL}"

if [ -f /.dockerenv ]; then
    CURR_CONTAINER=$(hostname)
    VOLUMES_ARGS="--volumes-from $CURR_CONTAINER"
else

    VOLUMES_ARGS="-v $DIR:$DIR
                 -v $HOME:$HOME
                 --tmpfs /tmp:exec
                 $EXTRA_VOLUMES"
fi

# create a unique container name prefixed with the user id, useful when on a shared machine
USER_ID=$(id -u -n)
RANDOM_NUMBER=$(shuf -i 100000-999999 -n 1)
CONTAINER_NAME="${USER_ID}_${RANDOM_NUMBER}"

docker run \
    --rm \
    --name $CONTAINER_NAME \
    $INTERACTIVE_FLAGS \
    --privileged \
    --network $USER-barton-ip6net \
    --cap-add SYS_PTRACE \
    $VOLUMES_ARGS \
    -w "$DIR" \
    --env-file $DOCKER_ENV_PATH \
    $EXTRA_ENV \
    $IMAGE \
    $*
